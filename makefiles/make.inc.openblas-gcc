
#
#  Compiler and flags
#

# GNU Fortran compiler
# --------------------
FC = gfortran
FC_FLAGS   = -m64 -O3 -funroll-loops -Wall
NOOPT_FLAGS = -O0 -Wall

# MAGMA library path
# ------------------
#MAGMAPATH = ./magma-1.4.0
#MAGMALIB = -L$(MAGMAPATH)/lib -lmagma -lmagmablas -lmagma 
#MAGMAINC = -I$(MAGMAPATH)/include


# CUDA installation path
# ----------------------
#CUDAPATH = /usr/local/cuda
#CUDAPATH = /usr/lib/nvidia-cuda-toolkit/


# CUDA compiler and libraries
# ---------------------------
#NVCC = $(CUDAPATH)/bin/nvcc
#CU_FLAGS = -O3 -Xptxas -v -m 64 -arch sm_20 $(MAGMAINC)
#CUDALIB = -L$(CUDAPATH)/lib64 -lcublas -lcudart -lcuda
#CUDAINC = -I$(CUDAPATH)/include


# GNU C++ compiler
# ----------------
CXX = g++
CXX_FLAGS = -m64 -Wall -funroll-loops -O3 # $(CUDAINC) $(MAGMAINC)


# C++ libraries
# -------------
CXXLIB = -lstdc++ -lrt -pthread


# Path to OpenBLAS library shipped with QUEST
# ----------------------------------------------------
LAPACKLIB = $(QUEST_DIR)/OpenBLAS/libopenblas.a

# DQMC library
# ------------
DQMCLIB    = libdqmc.a


# Library linking
# ---------------
LIB        = $(CXXLIB) $(LAPACKLIB) # $(CUDALIB) $(MAGMALIB) 


# Archiver and flags
# ------------------
ARCH       = ar
ARFLAG     = cr
RANLIB     = ranlib


# Program dependent flags
# -----------------------
#    -D_CKB    : use checkboard method for matrix B
#    -D_PREFIX : using prefix matrix multiplication
#    -D_OpenBC : use open boundary condition
#

PRG_FLAGS = -DDQMC_ASQRD  # -DDQMC_PROFILE -DDQMC_CUDA -D_CKB -D_SXX -D_QMC_MPI

FLAGS = $(FC_FLAGS) $(PRG_FLAGS)
